import ResturantCard from "./RestaurantCard";

import { useEffect, useState } from "react";
import Shimmer from "./Shimmer";



export const Body = () => {

  
  const [listOfRestaurants,setListOfRestaurants] = useState([]);
  const [filteredRestaurants,setFilteredRestaurants] = useState([]);

  const [searchText,setSearchText] = useState("");
  // console.log('body rendered');

  useEffect(()=>{
  //   console.log("useCallback called");
    fetchData();
  }, []);
  //console.log("Render called");

  const fetchData = async() => {
    try{
      const data = await fetch("https://www.swiggy.com/dapi/restaurants/list/v5?lat=11.0168445&lng=76.9558321&is-seo-homepage-enabled=true&page_type=DESKTOP_WEB_LISTING");
    
      const json = await data.json();
  
      console.log(json);
  
      //used optional chaining for safely access nested property
      //
      setListOfRestaurants(json?.data?.cards[1]?.card?.card?.gridElements?.infoWithStyle?.restaurants)
      setFilteredRestaurants(json?.data?.cards[1]?.card?.card?.gridElements?.infoWithStyle?.restaurants)
    } catch (err) {
      console.log(err);
    }
    
  }

  //improve the experience even more
  
    //ternary operator used over here
    return listOfRestaurants.length === 0 ? <Shimmer /> : (
        <div className="body">
            
            <div className="filter">
              <div className="search">
                <input type="text" className="search-box" value={searchText} 
                onChange={(e)=> {
                  setSearchText(e.target.value)
                }}/>
                <button 
                className="search-btn" 
                onClick={() => {
                  console.log(searchText);
                  //filter the restaurant cards and update the UI.
                  const filteredRestaurant = listOfRestaurants.filter((res) => res.info.name.toLowerCase().includes(searchText.toLowerCase()));
                  setFilteredRestaurants(filteredRestaurant)
                  
                }}>Search</button>
              </div>
              <button 
              className="filter-btn" 
              onClick={()=>{
                //filter logic here
                //the ui is getting generated by the listOfRestaurants
                const filteredList = listOfRestaurants.filter(res=> res.info.totalRatingsString >= "4");

                //the state variable of listOfRestaurants react is keep an eye on it  basically as soon as the set is called react started the reconciliation algorithm 
                setFilteredRestaurants(filteredList);
              }}>Top Rated Restaurants</button>
              
            </div>
            <div className="res-container">
              {
                filteredRestaurants.map((restaurant) => (
                  <ResturantCard 
                  key={restaurant.info.id}  
                  resData={restaurant}
                  />
                ))
              }
                
         
            </div>
        </div>
    )
}